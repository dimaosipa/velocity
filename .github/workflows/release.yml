# Release Workflow
# 
# This workflow creates git tags which trigger the CI workflow to build and release.
# 
# Required secrets:
#   - RELEASE_PAT: Personal Access Token with repo permissions to trigger workflows
#   - HOMEBREW_TAP_TOKEN: Token for updating the Homebrew tap (used by CI)
#
# Usage:
#   1. Go to GitHub Actions ‚Üí Release workflow
#   2. Click "Run workflow" 
#   3. Enter version like "v0.0.3"
#   4. CI will automatically build and create the release

name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

# Cancel previous release runs
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false  # Don't cancel releases in progress

jobs:
  create-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PAT }}

      - name: Validate version format
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "‚ùå Invalid version format. Please use format: v0.0.0"
            echo "   Example: v0.0.3"
            exit 1
          fi
          echo "‚úÖ Version format is valid: $VERSION"

      - name: Check if tag exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if git tag -l | grep -q "^${VERSION}$"; then
            echo "‚ùå Tag $VERSION already exists"
            exit 1
          fi
          echo "‚úÖ Tag $VERSION does not exist, proceeding..."

      - name: Create and push tag
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "Creating tag: $VERSION"
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create tag
          git tag -a "$VERSION" -m "Release $VERSION"
          
          # Push tag
          git push origin "$VERSION"
          
          echo "‚úÖ Tag $VERSION created and pushed successfully"
          echo "üöÄ CI will now build and create the release automatically"